name: Deploy Application

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Vérification des secrets pour s'assurer qu'ils sont chargés
      - name: Check secrets
        run: |
          echo "SSH_HOST: ${{ secrets.SSH_HOST }}"
          echo "SSH_USER: ${{ secrets.SSH_USER }}"

      # Installer les dépendances nécessaires
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client

      # Créer le répertoire .ssh et configurer la clé privée SSH
      - name: Set up SSH keys
        run: |
          # Créer le répertoire .ssh
          mkdir -p ~/.ssh

          # Ajouter la clé privée SSH en utilisant le secret
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -w 0 > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Ajouter l'hôte à known_hosts pour éviter l'erreur de type "host verification"
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      # Démarrer ssh-agent et ajouter la clé avec passphrase
      - name: Start ssh-agent and add private key
        run: |
          # Démarre le ssh-agent
          eval $(ssh-agent -s)

          # Ajoute la clé privée avec la passphrase (la passphrase est stockée dans un secret)
          ssh-add ~/.ssh/id_rsa

      # Se connecter en SSH à l'instance EC2 et effectuer un git pull
      - name: Deploy application via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            # Accéder au répertoire de l'application
            cd /home/raph/Training-AWS/
            # Effectuer un git pull pour récupérer les dernières modifications
            git pull origin main
          EOF

      # Supprimer le répertoire .ssh pour des raisons de sécurité après le déploiement
      - name: Clean up SSH keys
        run: |
          rm -rf ~/.ssh
